{"version":3,"sources":["Layout/Header.js","Layout/NotFound.js","utils/api/index.js","home/DeckListItem.js","home/DeckList.js","create-deck/CreateDeck.js","deck/Decks.js","study/Study.js","card-form/CardForm.js","add-card/AddCard.js","edit-deck/EditDeck.js","edit-card/EditCard.js","Layout/index.js","App.js","index.js"],"names":["Header","className","NotFound","API_BASE_URL","process","headers","Headers","stripCards","deck","cards","fetchJson","url","options","a","fetch","response","status","Error","statusText","json","name","listDecks","signal","createDeck","method","body","JSON","stringify","readDeck","deckId","updateDeck","updatedDeck","id","deleteDeck","listCards","createCard","card","Number","readCard","cardId","updateCard","updatedCard","deleteCard","append","DeckListItem","index","setRender","render","history","useHistory","abort","AbortController","window","confirm","push","style","listStyle","marginTop","maxWidth","length","description","display","flexDirection","justifyContent","to","marginRight","xmlns","width","height","fill","viewBox","d","margin","fillRule","onClick","DeckList","useState","deckList","setDeckList","useEffect","abortController","list","loadListDecks","paddingTop","map","CreateDeck","initialFormState","formData","setFormData","handleChange","event","target","value","aria-label","class","aria-current","onSubmit","preventDefault","console","log","saveDeckData","for","type","onChange","placeholder","rows","Decks","useParams","setCards","deckInfo","setDeckInfo","renderCards","setCardsRender","handleDeleteCard","getAttribute","tempDeck","loadDeck","marginBottom","padding","flex","front","back","Study","flip","setFlip","cardNumber","setCardNumber","setCard","parseInt","tempCards","newCard","reLoadCard","CardForm","handleReset","handleSubmit","deckData","mode","AddCard","setDeckData","goBack","saveCardData","EditDeck","contentEditable","EditCard","loadCard","Layout","path","exact","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83f68ee2.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Blandino's Flashcard</h1>\n        <p className=\"lead\">Discover My Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\nasync function fetchJson(url, options) {\n  try {\n    const response = await fetch(url, options);\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      throw error;\n    }\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves all cards associated with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to a possible empty array of cards.\n */\nexport async function listCards(deckId, signal) {\n  const url = `${API_BASE_URL}/cards?deckId=${deckId}`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React from \"react\";\nimport { deleteDeck } from \"../utils/api\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function DeckListItem({ deck, index, setRender, render }) {\n  const deckId = deck.id;\n  const history = useHistory();\n\n  async function handleDelete() {\n    const abort = new AbortController();\n    const signal = abort.signal;\n    const result = window.confirm(`\n    Delete this deck? \\n\\nYou will not be able to recover it.`);\n\n    if (result) {\n      await deleteDeck(deck.id, signal);\n      setRender(!render);\n      history.push(\"/\");\n    }\n  }\n\n  return (\n    <li key={index} style={{ listStyle: \"none\" }}>\n      <div className=\"card\" style={{ marginTop: \"10px\", maxWidth: \"800px\" }}>\n        <h5 className=\"card-header\">{deck.name}</h5>\n        <div className=\"card-body\">\n          <h6>{deck.cards.length} cards</h6>\n          <p className=\"card-text\">{deck.description}</p>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <div>\n              <Link\n                to={`/decks/${deckId}`}\n                className=\"btn btn-secondary\"\n                style={{ marginRight: \"10px\" }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"18\"\n                  height=\"18\"\n                  fill=\"currentColor\"\n                  className=\"bi bi-eye\"\n                  viewBox=\"7 2 2 15\"\n                >\n                  <path d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z\" />\n                  <path d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\" />\n                </svg>{\" \"}\n                View\n              </Link>\n              <Link\n                to={`/decks/${deckId}/study`}\n                className=\"btn btn-primary\"\n                style={{ margin: \"0 10px\" }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"18\"\n                  height=\"16\"\n                  fill=\"currentColor\"\n                  className=\"bi bi-journal-bookmark-fill\"\n                  viewBox=\"1 0 17 17\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M6 1h6v7a.5.5 0 0 1-.757.429L9 7.083 6.757 8.43A.5.5 0 0 1 6 8V1z\"\n                  />\n                  <path d=\"M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z\" />\n                  <path d=\"M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z\" />\n                </svg>{\" \"}\n                Study\n              </Link>\n            </div>\n            <div style={{}}>\n              <button className=\"btn btn-danger\" onClick={handleDelete}>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"16\"\n                  height=\"16\"\n                  fill=\"currentColor\"\n                  className=\"bi bi-trash\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\n                  />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport DeckListItem from \"./DeckListItem\";\nimport { Link } from \"react-router-dom\";\nimport { listDecks } from \"../utils/api\";\nexport default function DeckList({ setRender, render }) {\n  const [deckList, setDeckList] = useState([]);\n  useEffect(() => {\n    const abortController = new AbortController();\n    async function loadListDecks() {\n      const list = await listDecks(abortController.signal);\n      setDeckList(list);\n    }\n    loadListDecks();\n  }, [render]);\n\n  return (\n    <div>\n      <div>\n        <Link\n          to=\"/decks/new\"\n          className=\"btn btn-secondary\"\n          style={{ paddingTop: \"10px\" }}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"32\"\n            height=\"32\"\n            fill=\"currentColor\"\n            className=\"bi bi-plus\"\n            viewBox=\"2 1 16 16\"\n          >\n            <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n          </svg>\n          Create Deck\n        </Link>\n      </div>\n      {/*   deck goes here */}\n\n      {deckList.map((deck, index) => (\n        <DeckListItem\n          deck={deck}\n          index={index}\n          setRender={setRender}\n          render={render}\n        />\n      ))}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { createDeck } from \"../utils/api\";\n\nfunction CreateDeck() {\n  const initialFormState = {\n    name: \"\",\n    description: \"\",\n  };\n  const [formData, setFormData] = useState({ ...initialFormState });\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    async function saveDeckData() {\n      try {\n        await createDeck(formData, signal);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    saveDeckData();\n    setFormData({ ...initialFormState });\n    return abortController.abort();\n  }\n\n  function handleChange(event) {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  }\n\n  function handleReset() {\n    setFormData({ ...initialFormState });\n  }\n\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\" className=\"btn btn-link\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"22\"\n                height=\"18\"\n                fill=\"currentColor\"\n                class=\"bi bi-house-door\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path d=\"M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4H2.5z\" />\n              </svg>\n              Home\n            </Link>\n          </li>\n          <li\n            className=\"breadcrumb-item active\"\n            aria-current=\"page\"\n            style={{ marginTop: \"7px\" }}\n          >\n            Create Deck\n          </li>\n        </ol>\n      </nav>\n      <div>\n        <h1>Create Deck</h1>\n      </div>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <div class=\"mb-3\">\n            <label for=\"name\" class=\"form-label\">\n              Name\n            </label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              class=\"form-control\"\n              id=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              placeholder=\"Deck Name\"\n            />\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"description\" class=\"form-label\">\n              Description\n            </label>\n            <textarea\n              class=\"form-control\"\n              id=\"description\"\n              name=\"description\"\n              rows=\"3\"\n              onChange={handleChange}\n              value={formData.description}\n              placeholder=\"Brief description of deck\"\n            ></textarea>\n          </div>\n          <div class=\"col-auto\">\n            <button\n              type=\"reset\"\n              onClick={handleReset}\n              class=\"btn btn-secondary mb-3\"\n              style={{ marginRight: \"10px\" }}\n            >\n              Reset\n            </button>\n            <button type=\"submit\" class=\"btn btn-primary mb-3\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\nexport default CreateDeck;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { deleteDeck, readDeck, deleteCard } from \"../utils/api\";\n\nexport default function Decks() {\n  const { deckId } = useParams();\n  const [cards, setCards] = useState([]);\n  const history = useHistory();\n  const [deckInfo, setDeckInfo] = useState({});\n  const [renderCards, setCardsRender] = useState(false);\n\n  useEffect(() => {\n    const abort = new AbortController();\n    const signal = abort.signal;\n    async function loadDeck() {\n      const tempDeck = await readDeck(deckId, signal);\n      setDeckInfo({ ...tempDeck });\n      setCards(tempDeck.cards);\n    }\n    loadDeck();\n    return () => {\n      abort.abort();\n    };\n  }, [deckId, renderCards]);\n\n  async function handleDeleteDeck() {\n    const abort = new AbortController();\n    const signal = abort.signal;\n    const result = window.confirm(`\n    Delete this deck? \\n\\nYou will not be able to recover it.`);\n\n    if (result) {\n      await deleteDeck(deckId, signal);\n      history.push(\"/\");\n    }\n  }\n\n  async function handleDeleteCard(event) {\n    event.preventDefault();\n    let cardId = event.target.getAttribute(\"id\");\n\n    const abort = new AbortController();\n    const signal = abort.signal;\n    const result = window.confirm(\n      `Delete this Card? \\n\\nYou will not be able to recover it.`\n    );\n\n    if (result) {\n      try {\n        await deleteCard(cardId, signal);\n        setCardsRender(!renderCards);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n  }\n\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\" className=\"btn btn-link\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"22\"\n                height=\"18\"\n                fill=\"currentColor\"\n                class=\"bi bi-house-door\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path d=\"M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4H2.5z\" />\n              </svg>\n              Home\n            </Link>\n          </li>\n          <li\n            className=\"breadcrumb-item active\"\n            aria-current=\"page\"\n            style={{ marginTop: \"7px\" }}\n          >\n            {deckInfo.name}\n          </li>\n        </ol>\n      </nav>\n      <div>\n        <h3>{deckInfo.name}</h3>\n      </div>\n      <div className=\"card\" style={{ marginTop: \"10px\" }}>\n        <div className=\"card-body\">\n          <p>{deckInfo.description}</p>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <div>\n                <Link\n                  to={`/decks/${deckId}/edit`}\n                  className=\"btn btn-secondary\"\n                  style={{ marginRight: \"10px\" }}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    fill=\"currentColor\"\n                    class=\"bi bi-pencil\"\n                    viewBox=\"0 0 16 16\"\n                  >\n                    <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\n                  </svg>\n                  Edit\n                </Link>\n                <Link\n                  to={`/decks/${deckId}/study`}\n                  className=\"btn btn-primary\"\n                  style={{ margin: \"0 10px\" }}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"18\"\n                    height=\"18\"\n                    fill=\"currentColor\"\n                    className=\"bi bi-journal-bookmark-fill\"\n                    viewBox=\"1 0 17 17\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M6 1h6v7a.5.5 0 0 1-.757.429L9 7.083 6.757 8.43A.5.5 0 0 1 6 8V1z\"\n                    />\n                    <path d=\"M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z\" />\n                    <path d=\"M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z\" />\n                  </svg>{\" \"}\n                  Study\n                </Link>\n              </div>\n              <div>\n                <Link\n                  to={`/decks/${deckId}/cards/new`}\n                  className=\"btn btn-primary\"\n                  style={{ margin: \"0 10px\" }}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"18\"\n                    height=\"18\"\n                    fill=\"currentColor\"\n                    class=\"bi bi-plus\"\n                    viewBox=\"2 1 16 16\"\n                  >\n                    <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n                  </svg>\n                  Add Cards\n                </Link>\n              </div>\n            </div>\n            <div style={{}}>\n              <button className=\"btn btn-danger\" onClick={handleDeleteDeck}>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"16\"\n                  height=\"16\"\n                  fill=\"currentColor\"\n                  className=\"bi bi-trash\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\n                  />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end of deck section*/}\n      {/* Card List Section*/}\n\n      <div style={{ marginTop: \"30px\", marginBottom: \"0\" }}>\n        <h1>Cards</h1>\n      </div>\n      <ul style={{ listStyle: \"none\", margin: \"0px\", padding: \"0px\" }}>\n        {cards.map((card, index) => {\n          return (\n            <li key={index}>\n              <div className=\"card\" style={{ marginTop: \"5px\" }}>\n                <div className=\"card-body\">\n                  {\" \"}\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    <div style={{ flex: \"2\", marginRight: \"40px\" }}>\n                      <p>{card.front}</p>\n                    </div>\n                    <div style={{ flex: \"2\" }}>\n                      <p>{card.back}</p>\n                    </div>\n                  </div>{\" \"}\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      justifyContent: \"flex-end\",\n                    }}\n                  >\n                    {\" \"}\n                    <div>\n                      <Link\n                        to={`/decks/${deckId}/cards/${card.id}/edit`}\n                        className=\"btn btn-secondary\"\n                        style={{ marginRight: \"10px\" }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"16\"\n                          height=\"16\"\n                          fill=\"currentColor\"\n                          class=\"bi bi-pencil\"\n                          viewBox=\"0 0 16 16\"\n                        >\n                          <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\n                        </svg>\n                        Edit\n                      </Link>\n                    </div>\n                    <div onClick={handleDeleteCard}>\n                      <button id={card.id} className=\"btn btn-danger\">\n                        <svg\n                          id={card.id}\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"16\"\n                          height=\"16\"\n                          fill=\"currentColor\"\n                          className=\"bi bi-trash\"\n                          viewBox=\"0 0 16 16\"\n                        >\n                          <path\n                            id={card.id}\n                            d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"\n                          />\n                          <path\n                            id={card.id}\n                            fillRule=\"evenodd\"\n                            d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\n                          />\n                        </svg>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { listCards, readCard, readDeck } from \"../utils/api\";\n\nexport default function Study() {\n  const { deckId } = useParams();\n  const [cards, setCards] = useState([]);\n  const [flip, setFlip] = useState(false);\n  const [cardNumber, setCardNumber] = useState(1);\n  const [card, setCard] = useState({});\n  const history = useHistory();\n  const [deckInfo, setDeckInfo] = useState({});\n\n  //using readDeck to obtain the deck and cards\n  useEffect(() => {\n    const abort = new AbortController();\n    const signal = abort.signal;\n    async function loadDeck() {\n      const tempDeck = await readDeck(deckId, signal);\n      setDeckInfo({ ...tempDeck });\n      setCards(tempDeck.cards);\n    }\n    loadDeck();\n    return () => {\n      abort.abort();\n    };\n  }, [deckId]);\n\n  //a local variable cardNumber and card are used to seed readCard\n  useEffect(() => {\n    const abortController = new AbortController();\n    async function reLoadCard() {\n      try {\n        const signal = abortController.signal;\n        if (cardNumber < cards.length) {\n          const newCard = await readCard(cards[cardNumber - 1].id, signal);\n          setCard(newCard);\n        }\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    reLoadCard();\n    return () => abortController.abort();\n  }, [cardNumber, cards]);\n\n  function handleFlip() {\n    setFlip(!flip);\n    if (cardNumber === cards.length && flip === true) {\n      const response = window.confirm(\n        \"Restart cards?\\n\\nClick 'cancel to return to the home page.\"\n      );\n      if (!response) {\n        history.push(\"/\");\n      } else {\n        async function reLoadCard() {\n          const abortController = new AbortController();\n          const signal = abortController.signal;\n          const tempCards = await listCards(\n            parseInt(deckId),\n            abortController.signal\n          );\n          setCards(tempCards);\n          if (cardNumber < cards.length) {\n            setCards(tempCards);\n            const newCard = await readCard(cards[cardNumber].id, signal);\n            setCard(newCard);\n          }\n        }\n        reLoadCard();\n        setCardNumber(1);\n      }\n    }\n  }\n  //don't reset the flip if its the last card\n  //no more cards to view in the cards container\n  async function handleNext() {\n    if (cardNumber === cards.length) {\n      if (cardNumber === cards.length && flip === true) {\n        const response = window.confirm(\n          \"Restart cards?\\n\\nClick 'cancel to return to the home page.\"\n        );\n        if (!response) {\n          history.push(\"/\");\n        } else {\n          async function reLoadCard() {\n            const abortController = new AbortController();\n            const signal = abortController.signal;\n            const tempCards = await listCards(\n              parseInt(deckId),\n              abortController.signal\n            );\n            setCards(tempCards);\n            if (cardNumber < cards.length) {\n              setCards(tempCards);\n              const newCard = await readCard(cards[cardNumber].id, signal);\n              setCard(newCard);\n            }\n          }\n          reLoadCard();\n          setCardNumber(1);\n        }\n      }\n      setFlip(!flip);\n      return;\n    }\n\n    //reset the flip and start over with new card\n    setFlip(!flip);\n    setCardNumber(cardNumber + 1);\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    const newCard = await readCard(cards[cardNumber].id, signal);\n    setCard({ ...newCard });\n  }\n\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\" className=\"btn btn-link\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"22\"\n                height=\"18\"\n                fill=\"currentColor\"\n                class=\"bi bi-house-door\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path d=\"M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4H2.5z\" />\n              </svg>\n              Home\n            </Link>\n          </li>\n          <li\n            className=\"breadcrumb-item active\"\n            aria-current=\"page\"\n            style={{ marginTop: \"7px\" }}\n          >\n            {deckInfo.name}\n          </li>\n\n          <li\n            className=\"breadcrumb-item active\"\n            aria-current=\"page\"\n            style={{ marginTop: \"7px\" }}\n          >\n            Study\n          </li>\n        </ol>\n      </nav>\n      {cards.length < 3 ? (\n        <div>\n          <h1>{deckInfo.name}: Study</h1>\n        </div>\n      ) : (\n        <div>\n          <h1>Study:{deckInfo.name}</h1>\n        </div>\n      )}\n\n      {cards.length < 3 ? (\n        <div className=\"card\" style={{ marginTop: \"10px\", maxWidth: \"800px\" }}>\n          <div className=\"card-body\">\n            <h3>Not enough cards.</h3>\n            <p>\n              You need at least 3 cards to study. There are {cards.length} cards\n              in this deck.\n            </p>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <div>\n                <Link\n                  to={`/decks/${deckId}/cards/new`}\n                  className=\"btn btn-primary\"\n                  style={{ margin: \"0 10px\" }}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"22\"\n                    height=\"22\"\n                    fill=\"currentColor\"\n                    class=\"bi bi-plus\"\n                    viewBox=\"2 1 16 16\"\n                  >\n                    <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n                  </svg>\n                  Add Cards\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"card\" style={{ marginTop: \"10px\", maxWidth: \"800px\" }}>\n          <div className=\"card-body\">\n            <h6>\n              Card {cardNumber} of {cards.length}\n            </h6>\n            <p className=\"card-text\">\n              {flip === true ? card.back : card.front}\n            </p>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <div>\n                <Link\n                  to=\"#\"\n                  className=\"btn btn-secondary\"\n                  style={{ marginRight: \"10px\" }}\n                  onClick={handleFlip}\n                >\n                  Flip\n                </Link>\n                {flip && (\n                  <Link\n                    to=\"#\"\n                    className=\"btn btn-primary\"\n                    style={{ margin: \"0 10px\" }}\n                    onClick={handleNext}\n                  >\n                    Next\n                  </Link>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* end of card section*/}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function CardForm({\n  handleReset,\n  handleSubmit,\n  handleChange,\n  deckData,\n  formData,\n  mode,\n}) {\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\" className=\"btn btn-link\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"22\"\n                height=\"18\"\n                fill=\"currentColor\"\n                class=\"bi bi-house-door\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path d=\"M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4H2.5z\" />\n              </svg>\n              Home\n            </Link>\n          </li>\n          <li\n            className=\"breadcrumb-item active\"\n            aria-current=\"page\"\n            style={{ marginTop: \"7px\" }}\n          >\n            <Link onClick={handleReset}>{deckData.name}</Link>\n          </li>\n          <li\n            className=\"breadcrumb-item active\"\n            aria-current=\"page\"\n            style={{ marginTop: \"7px\" }}\n          >\n            Add Card\n          </li>\n        </ol>\n      </nav>\n      <div>\n        <h3>\n          {mode === \"editCard\" ? \"Edit Card\" : `${deckData.name} : Add Card`}\n        </h3>\n      </div>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <div class=\"mb-3\">\n            <label for=\"name\" class=\"form-label\">\n              Front\n            </label>\n            <textarea\n              name=\"front\"\n              class=\"form-control\"\n              id=\"name\"\n              value={formData.front}\n              onChange={handleChange}\n              placeholder=\"Front side of card\"\n            ></textarea>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"description\" class=\"form-label\">\n              Back\n            </label>\n            <textarea\n              class=\"form-control\"\n              id=\"description\"\n              name=\"back\"\n              onChange={handleChange}\n              value={formData.back}\n              placeholder=\"Back side of card\"\n            ></textarea>\n          </div>\n          <div class=\"col-auto\">\n            <button\n              type=\"button\"\n              onClick={handleReset}\n              class=\"btn btn-secondary mb-3\"\n              style={{ marginRight: \"10px\" }}\n            >\n              {mode === \"editCard\" ? \"Cancel\" : \"Done\"}\n            </button>\n            <button type=\"submit\" class=\"btn btn-primary mb-3\">\n              {mode === \"editCard\" ? \"Submit\" : \"Save\"}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { createCard, readDeck } from \"../utils/api\";\nimport CardForm from \"../card-form/CardForm\";\n\nfunction AddCard() {\n  const { deckId } = useParams();\n  const history = useHistory();\n  const initialFormState = {\n    front: \"\",\n    back: \"\",\n  };\n  const [deckData, setDeckData] = useState({});\n  const [formData, setFormData] = useState({ ...initialFormState });\n  const mode = \"addCard\";\n\n  useEffect(() => {\n    const abort = new AbortController();\n    const signal = abort.signal;\n    async function loadDeck() {\n      const tempDeck = await readDeck(deckId, signal);\n      setDeckData({ ...tempDeck });\n    }\n    loadDeck();\n    return () => {\n      abort.abort();\n    };\n  }, [deckId]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    async function saveCardData() {\n      try {\n        await createCard(deckId, formData, signal);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    saveCardData();\n    setFormData({ ...initialFormState });\n    return abortController.abort();\n  }\n\n  function handleChange(event) {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  }\n\n  function handleReset() {\n    history.goBack();\n  }\n\n  return (\n    <CardForm\n      handleReset={handleReset}\n      handleSubmit={handleSubmit}\n      handleChange={handleChange}\n      formData={formData}\n      deckData={deckData}\n      mode={mode}\n    />\n  );\n}\nexport default AddCard;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, updateDeck } from \"../utils/api\";\n\nfunction EditDeck() {\n  const history = useHistory();\n  const { deckId } = useParams();\n  const [formData, setFormData] = useState({});\n\n  useEffect(() => {\n    const abort = new AbortController();\n    const signal = abort.signal;\n    async function loadDeck() {\n      const tempDeck = await readDeck(deckId, signal);\n\n      setFormData({ ...tempDeck });\n    }\n    loadDeck();\n    return () => {\n      abort.abort();\n    };\n  }, [deckId]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    async function saveDeckData() {\n      try {\n        await updateDeck(formData, signal);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    saveDeckData();\n    return abortController.abort();\n  }\n\n  function handleChange(event) {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  }\n  function handleCancel() {\n    history.goBack();\n  }\n\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\" className=\"btn btn-link\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"22\"\n                height=\"18\"\n                fill=\"currentColor\"\n                class=\"bi bi-house-door\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path d=\"M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4H2.5z\" />\n              </svg>\n              Home\n            </Link>\n          </li>\n          <li\n            className=\"breadcrumb-item active\"\n            aria-current=\"page\"\n            style={{ marginTop: \"7px\" }}\n          >\n            <Link onClick={() => history.goBack()}>{formData.name}</Link>\n          </li>\n          <li\n            className=\"breadcrumb-item active\"\n            aria-current=\"page\"\n            style={{ marginTop: \"7px\" }}\n          >\n            Edit Deck\n          </li>\n        </ol>\n      </nav>\n      <div>\n        <h1>Edit Deck</h1>\n      </div>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <div class=\"mb-3\">\n            <label for=\"name\" class=\"form-label\">\n              Name\n            </label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              class=\"form-control\"\n              id=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              placeholder=\"Deck Name\"\n            />\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"description\" class=\"form-label\">\n              Description\n            </label>\n            <textarea\n              contentEditable\n              class=\"form-control\"\n              id=\"description\"\n              name=\"description\"\n              rows=\"3\"\n              onChange={handleChange}\n              value={formData.description}\n              placeholder=\"Brief description of deck\"\n            ></textarea>\n          </div>\n          <div class=\"col-auto\">\n            <button\n              type=\"reset\"\n              onClick={handleCancel}\n              class=\"btn btn-secondary mb-3\"\n              style={{ marginRight: \"10px\" }}\n            >\n              Cancel\n            </button>\n            <button type=\"submit\" class=\"btn btn-primary mb-3\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\nexport default EditDeck;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { updateCard, readCard, readDeck } from \"../utils/api\";\nimport CardForm from \"../card-form/CardForm\";\n\nfunction EditCard() {\n  const { deckId, cardId } = useParams();\n  const history = useHistory();\n  const initialFormState = {\n    front: \"\",\n    back: \"\",\n  };\n  const [deckData, setDeckData] = useState({});\n  const [formData, setFormData] = useState({ ...initialFormState });\n  const mode = \"editCard\";\n\n  useEffect(() => {\n    const abort = new AbortController();\n    const signal = abort.signal;\n    async function loadDeck() {\n      const tempDeck = await readDeck(deckId, signal);\n      setDeckData({ ...tempDeck });\n    }\n    loadDeck();\n    return () => {\n      abort.abort();\n    };\n  }, [deckId]);\n\n  useEffect(() => {\n    const abort = new AbortController();\n    const signal = abort.signal;\n    async function loadCard() {\n      const tempDeck = await readCard(cardId, signal);\n      setFormData({ ...tempDeck });\n    }\n    loadCard();\n    return () => {\n      abort.abort();\n    };\n  }, [cardId]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    async function saveCardData() {\n      try {\n        await updateCard(formData, signal);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    saveCardData();\n    handleReset();\n\n    return abortController.abort();\n  }\n\n  function handleChange(event) {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  }\n\n  function handleReset() {\n    history.goBack();\n  }\n\n  return (\n    <CardForm\n      handleReset={handleReset}\n      handleSubmit={handleSubmit}\n      handleChange={handleChange}\n      formData={formData}\n      deckData={deckData}\n      mode={mode}\n    />\n  );\n}\nexport default EditCard;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport { Route, Switch } from \"react-router-dom\";\nimport DeckList from \"../home/DeckList\";\nimport CreateDeck from \"../create-deck/CreateDeck\";\nimport Decks from \"../deck/Decks\";\nimport Study from \"../study/Study\";\nimport AddCard from \"../add-card/AddCard\";\nimport EditDeck from \"../edit-deck/EditDeck\";\nimport EditCard from \"../edit-card/EditCard\";\n\nfunction Layout() {\n  const [render, setRender] = useState(false);\n\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/\" exact=\"true\">\n            <DeckList render={render} setRender={setRender} />\n          </Route>{\" \"}\n          <Route path=\"/decks/new\">\n            <CreateDeck />\n          </Route>{\" \"}\n          <Route path=\"/decks/:deckId/study\" exact=\"true\">\n            <Study />\n          </Route>\n          <Route path=\"/decks/:deckId\" exact=\"true\">\n            <Decks />\n          </Route>\n          <Route path=\"/decks/:deckId/edit\" exact=\"true\">\n            <EditDeck />\n          </Route>\n          <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n            <EditCard />\n          </Route>\n          <Route path=\"/decks/:deckId/cards/new\" exact=\"true\">\n            <AddCard />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}